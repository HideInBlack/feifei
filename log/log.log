2022-11-22 00:01:55.981 DEBUG 3020 --- [http-nio-9090-exec-9] com.literature.dao.UserDao.insertUser    : ==>  Preparing: insert into literature.lt_user(username, email, password, create_time) values (?,?,?,?) 
2022-11-22 00:01:56.190 DEBUG 3020 --- [http-nio-9090-exec-9] com.literature.dao.UserDao.insertUser    : ==> Parameters: Настасья(String), 3227881331@qq.com(String), feier418010QF(String), 2022-11-22 00:01:55(String)
2022-11-22 00:01:56.298 DEBUG 3020 --- [http-nio-9090-exec-9] com.literature.dao.UserDao.insertUser    : <==    Updates: 1
2022-11-22 00:02:56.375  WARN 3020 --- [http-nio-9090-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'TwoPassword' for method parameter type String is not present]
2022-11-22 00:03:38.749 DEBUG 3020 --- [http-nio-9090-exec-8] c.literature.dao.UserDao.getUserByEmail  : ==>  Preparing: select * from literature.lt_user where email = ? and password = ? and del = 0; 
2022-11-22 00:03:38.752 DEBUG 3020 --- [http-nio-9090-exec-8] c.literature.dao.UserDao.getUserByEmail  : ==> Parameters: qinfei(String), 20010814(String)
2022-11-22 00:03:38.757 DEBUG 3020 --- [http-nio-9090-exec-8] c.literature.dao.UserDao.getUserByEmail  : <==      Total: 1
2022-11-22 00:03:55.343 DEBUG 3020 --- [http-nio-9090-exec-7] c.literature.dao.UserDao.getUserByEmail  : ==>  Preparing: select * from literature.lt_user where email = ? and password = ? and del = 0; 
2022-11-22 00:03:55.344 DEBUG 3020 --- [http-nio-9090-exec-7] c.literature.dao.UserDao.getUserByEmail  : ==> Parameters: qinfei(String), 20010815(String)
2022-11-22 00:03:55.349 DEBUG 3020 --- [http-nio-9090-exec-7] c.literature.dao.UserDao.getUserByEmail  : <==      Total: 0
2022-11-22 00:04:25.083 DEBUG 3020 --- [http-nio-9090-exec-2] c.literature.dao.UserDao.getUserByEmail  : ==>  Preparing: select * from literature.lt_user where email = ? and password = ? and del = 0; 
2022-11-22 00:04:25.084 DEBUG 3020 --- [http-nio-9090-exec-2] c.literature.dao.UserDao.getUserByEmail  : ==> Parameters: admin(String), 123(String)
2022-11-22 00:04:25.088 DEBUG 3020 --- [http-nio-9090-exec-2] c.literature.dao.UserDao.getUserByEmail  : <==      Total: 0
2022-11-22 00:04:48.477 DEBUG 3020 --- [http-nio-9090-exec-8] c.literature.dao.UserDao.getUserByEmail  : ==>  Preparing: select * from literature.lt_user where email = ? and password = ? and del = 0; 
2022-11-22 00:04:48.479 DEBUG 3020 --- [http-nio-9090-exec-8] c.literature.dao.UserDao.getUserByEmail  : ==> Parameters: admin(String), admin(String)
2022-11-22 00:04:48.482 DEBUG 3020 --- [http-nio-9090-exec-8] c.literature.dao.UserDao.getUserByEmail  : <==      Total: 0
2022-11-22 00:05:01.537 DEBUG 3020 --- [http-nio-9090-exec-6] c.literature.dao.UserDao.getUserByEmail  : ==>  Preparing: select * from literature.lt_user where email = ? and password = ? and del = 0; 
2022-11-22 00:05:01.538 DEBUG 3020 --- [http-nio-9090-exec-6] c.literature.dao.UserDao.getUserByEmail  : ==> Parameters: qinfei(String), 20010814(String)
2022-11-22 00:05:01.545 DEBUG 3020 --- [http-nio-9090-exec-6] c.literature.dao.UserDao.getUserByEmail  : <==      Total: 1
2022-11-22 00:05:14.089 DEBUG 3020 --- [http-nio-9090-exec-7] c.literature.dao.UserDao.getUserByEmail  : ==>  Preparing: select * from literature.lt_user where email = ? and password = ? and del = 0; 
2022-11-22 00:05:14.090 DEBUG 3020 --- [http-nio-9090-exec-7] c.literature.dao.UserDao.getUserByEmail  : ==> Parameters: admin(String), 123456(String)
2022-11-22 00:05:14.095 DEBUG 3020 --- [http-nio-9090-exec-7] c.literature.dao.UserDao.getUserByEmail  : <==      Total: 1
2022-11-22 00:17:17.625 DEBUG 3020 --- [http-nio-9090-exec-3] c.literature.dao.UserDao.getUserByEmail  : ==>  Preparing: select * from literature.lt_user where email = ? and password = ? and del = 0; 
2022-11-22 00:17:17.628 DEBUG 3020 --- [http-nio-9090-exec-3] c.literature.dao.UserDao.getUserByEmail  : ==> Parameters: qinfei(String), 20010814(String)
2022-11-22 00:17:17.634 DEBUG 3020 --- [http-nio-9090-exec-3] c.literature.dao.UserDao.getUserByEmail  : <==      Total: 1
